# name: CI
# on:
#   push:
#     branches:
#       - master
#   workflow_dispatch:
#     inputs:
#       version:
#         description: 'Version'     
#         required: true
#         type: string
        
# jobs:
#   build:
#     name: Build app
#     runs-on: ubuntu-latest

#     steps:
#       - name: Cancel previous runs
#         uses: styfle/cancel-workflow-action@0.11.0
#         with:
#           access_token: ${{ github.token }}
#           all_but_latest: true

#       - name: Clone repo
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Validate Gradle Wrapper
#         uses: gradle/wrapper-validation-action@v1
        
#       - name: Setup Android SDK
#         run: |
#           ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager "build-tools;29.0.3"

#       - name: Set up JDK
#         uses: actions/setup-java@v3
#         with:
#           java-version: 17
#           distribution: temurin

#       - name: Copy CI gradle.properties
#         run: |
#           mkdir -p ~/.gradle
#           cp .github/runner-files/ci-gradle.properties ~/.gradle/gradle.properties

#       - name: Build app
#         uses: gradle/gradle-command-action@v2
#         with:
#           arguments: assembleStandardRelease

#       # Sign APK and create release for tags
#       - name: Get tag name
#         if: github.event.inputs.version != ''
#         run: |
#           set -x
#           echo "VERSION_TAG=${{github.event.inputs.version}}" >> $GITHUB_ENV

#       - name: Sign APK
#         if: env.VERSION_TAG != ''
#         uses: r0adkll/sign-android-release@v1
#         with:
#           releaseDirectory: app/build/outputs/apk/standard/release
#           signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#           alias: ${{ secrets.ALIAS }}
#           keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#           keyPassword: ${{ secrets.KEY_PASSWORD }}

#       - name: Clean up build artifacts
#         if: env.VERSION_TAG != ''
#         run: |
#           set -e

#           mv app/build/outputs/apk/standard/release/app-standard-universal-release-unsigned-signed.apk tachiyomij2k-${{ env.VERSION_TAG }}.apk
#           sha=`sha256sum tachiyomij2k-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
#           echo "APK_UNIVERSAL_SHA=$sha" >> $GITHUB_ENV

#           cp app/build/outputs/apk/standard/release/app-standard-arm64-v8a-release-unsigned-signed.apk tachiyomij2k-arm64-v8a-${{ env.VERSION_TAG }}.apk
#           sha=`sha256sum tachiyomij2k-arm64-v8a-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
#           echo "APK_ARM64_V8A_SHA=$sha" >> $GITHUB_ENV

#           cp app/build/outputs/apk/standard/release/app-standard-armeabi-v7a-release-unsigned-signed.apk tachiyomij2k-armeabi-v7a-${{ env.VERSION_TAG }}.apk
#           sha=`sha256sum tachiyomij2k-armeabi-v7a-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
#           echo "APK_ARMEABI_V7A_SHA=$sha" >> $GITHUB_ENV

#           cp app/build/outputs/apk/standard/release/app-standard-x86-release-unsigned-signed.apk tachiyomij2k-x86-${{ env.VERSION_TAG }}.apk
#           sha=`sha256sum tachiyomij2k-x86-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
#           echo "APK_X86_SHA=$sha" >> $GITHUB_ENV
          
#           cp app/build/outputs/apk/standard/release/app-standard-x86_64-release-unsigned-signed.apk tachiyomij2k-x86_64-${{ env.VERSION_TAG }}.apk
#           sha=`sha256sum tachiyomij2k-x86_64-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
#           echo "APK_X86_64_SHA=$sha" >> $GITHUB_ENV

#       - name: Create Release
#         if: env.VERSION_TAG != ''
#         uses: softprops/action-gh-release@v1
#         with:
#           tag_name: ${{ env.VERSION_TAG }}
#           name: TachiyomiJ2K ${{ env.VERSION_TAG }}
#           body: |
#             ---

#             ### Checksums

#             | Variant | SHA-256 |
#             | ------- | ------- |
#             | Universal | ${{ env.APK_UNIVERSAL_SHA }}
#             | arm64-v8a | ${{ env.APK_ARM64_V8A_SHA }}
#             | armeabi-v7a | ${{ env.APK_ARMEABI_V7A_SHA }}
#             | x86 | ${{ env.APK_X86_SHA }} |
#             | x86_64 | ${{ env.APK_X86_64_SHA }} |
#           files: |
#             tachiyomij2k-${{ env.VERSION_TAG }}.apk
#             tachiyomij2k-arm64-v8a-${{ env.VERSION_TAG }}.apk
#             tachiyomij2k-armeabi-v7a-${{ env.VERSION_TAG }}.apk
#             tachiyomij2k-x86-${{ env.VERSION_TAG }}.apk
#             tachiyomij2k-x86_64-${{ env.VERSION_TAG }}.apk
#           draft: true
#           prerelease: false
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: CI
on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'     
        required: true
        type: string

jobs:
  build:
    name: Build app
    runs-on: ubuntu-latest

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
          all_but_latest: true

      - name: Clone repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Android SDK
        run: |
          ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager "build-tools;29.0.3"

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Copy CI gradle.properties
        run: |
          mkdir -p ~/.gradle
          cp .github/runner-files/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Build app
        uses: gradle/gradle-command-action@v2
        with:
          arguments: assembleStandardRelease

      - name: Get tag name
        if: github.event.inputs.version != ''
        run: |
          echo "VERSION_TAG=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Rename APKs and calculate checksums
        if: env.VERSION_TAG != ''
        run: |
          set -e

          mv app/build/outputs/apk/standard/release/app-standard-universal-release.apk tachiyomij2k-${{ env.VERSION_TAG }}.apk
          sha=$(sha256sum tachiyomij2k-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }')
          echo "APK_UNIVERSAL_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-arm64-v8a-release.apk tachiyomij2k-arm64-v8a-${{ env.VERSION_TAG }}.apk
          sha=$(sha256sum tachiyomij2k-arm64-v8a-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }')
          echo "APK_ARM64_V8A_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-armeabi-v7a-release.apk tachiyomij2k-armeabi-v7a-${{ env.VERSION_TAG }}.apk
          sha=$(sha256sum tachiyomij2k-armeabi-v7a-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }')
          echo "APK_ARMEABI_V7A_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-x86-release.apk tachiyomij2k-x86-${{ env.VERSION_TAG }}.apk
          sha=$(sha256sum tachiyomij2k-x86-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }')
          echo "APK_X86_SHA=$sha" >> $GITHUB_ENV

          cp app/build/outputs/apk/standard/release/app-standard-x86_64-release.apk tachiyomij2k-x86_64-${{ env.VERSION_TAG }}.apk
          sha=$(sha256sum tachiyomij2k-x86_64-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }')
          echo "APK_X86_64_SHA=$sha" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: env.VERSION_TAG != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: TachiyomiJ2K ${{ env.VERSION_TAG }}
          body: |
            ---

            ### Checksums

            | Variant | SHA-256 |
            | ------- | ------- |
            | Universal | ${{ env.APK_UNIVERSAL_SHA }} |
            | arm64-v8a | ${{ env.APK_ARM64_V8A_SHA }} |
            | armeabi-v7a | ${{ env.APK_ARMEABI_V7A_SHA }} |
            | x86 | ${{ env.APK_X86_SHA }} |
            | x86_64 | ${{ env.APK_X86_64_SHA }} |
          files: |
            tachiyomij2k-${{ env.VERSION_TAG }}.apk
            tachiyomij2k-arm64-v8a-${{ env.VERSION_TAG }}.apk
            tachiyomij2k-armeabi-v7a-${{ env.VERSION_TAG }}.apk
            tachiyomij2k-x86-${{ env.VERSION_TAG }}.apk
            tachiyomij2k-x86_64-${{ env.VERSION_TAG }}.apk
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APKs to Telegram
        if: env.VERSION_TAG != ''
        run: |
          echo "Uploading APKs to Telegram..."

          send_document() {
            local file_path="$1"
            local caption="$2"

            if [[ -f "$file_path" ]]; then
              curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendDocument" \
                -F chat_id="${{ secrets.TG_CHAT_ID }}" \
                -F document=@"$file_path" \
                -F caption="$caption"
              echo "Uploaded $file_path"
            else
              echo "File $file_path does not exist, skipping upload."
            fi
          }

          send_document "tachiyomij2k-${{ env.VERSION_TAG }}.apk" "ðŸ“¦ *Universal* APK\nVersion: *${{ env.VERSION_TAG }}*"
          send_document "tachiyomij2k-arm64-v8a-${{ env.VERSION_TAG }}.apk" "ðŸ“¦ *arm64-v8a* APK\nVersion: *${{ env.VERSION_TAG }}*"
          send_document "tachiyomij2k-armeabi-v7a-${{ env.VERSION_TAG }}.apk" "ðŸ“¦ *armeabi-v7a* APK\nVersion: *${{ env.VERSION_TAG }}*"
          send_document "tachiyomij2k-x86-${{ env.VERSION_TAG }}.apk" "ðŸ“¦ *x86* APK\nVersion: *${{ env.VERSION_TAG }}*"
          send_document "tachiyomij2k-x86_64-${{ env.VERSION_TAG }}.apk" "ðŸ“¦ *x86_64* APK\nVersion: *${{ env.VERSION_TAG }}*"
